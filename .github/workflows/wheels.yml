name: Build

on:
  push:
    tags:
      - 'v*'

jobs:
  build_wheels:
    name: Build wheels on ${{matrix.arch}} for ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-20.04, windows-2019, macos-10.15]
        arch: [auto]
        include:
          - os: ubuntu-20.04
            arch: aarch64

    steps:
      - uses: actions/checkout@v2
      - uses: docker/setup-qemu-action@v1
        if: ${{ matrix.arch == 'aarch64' }}
        name: Set up QEMU
      - uses: pypa/cibuildwheel@v2.1.2
        env:
          CIBW_BUILD_VERBOSITY: "1"
          CIBW_BEFORE_ALL_LINUX: "curl https://sh.rustup.rs -sSf | sh -s -- --default-toolchain stable -y && yum install -y openssl-devel"
          CIBW_ENVIRONMENT: 'PATH="$PATH:$HOME/.cargo/bin"'
          CIBW_ARCHS_LINUX: ${{matrix.arch}}

      - uses: actions/upload-artifact@v2
        with:
          path: ./wheelhouse/*.whl

  build_sdist:
    name: Build source distribution
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
      - name: Build sdist
        run: python -m pip install -r requirements.txt && python setup.py sdist
      - uses: actions/upload-artifact@v2
        with:
          path: dist/*.tar.gz

  upload_pypi:
      needs: [build_wheels, build_sdist]
      runs-on: ubuntu-20.04
      steps:
        - uses: actions/download-artifact@v2
          with:
            name: artifact
            path: dist

        - uses: pypa/gh-action-pypi-publish@v1.4.2
          with:
            user: __token__
            password: ${{ secrets.pypi_token }}
            repository_url: https://test.pypi.org/legacy/
